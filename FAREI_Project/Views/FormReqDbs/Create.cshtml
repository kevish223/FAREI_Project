﻿@using FAREI_Project.ViewModel
@model RequestsViewModel
<head>
    @if (Model.User.Type=="Supervisor") {
        <link rel="stylesheet" href="~/css/Supervisor.css" />
    }
    else 
    {
         <link rel="stylesheet" href="~/css/User.css" />
    }
</head>

@{
    ViewData["Title"] = "Index";
}

<partial name="Navbar"></partial>
<div class="container">
    @using (Html.BeginForm()){
<h2>Repair/Servicing Request Form</h2>


<form asp-action="Create" method="post">
    @Html.AntiForgeryToken()
    <h4>Request Details</h4>
    <div class="row mb-3">

        <div class="col-md-3">
            <label >Site:</label>
            <input asp-for="FormReqDbs.Site" class="form-control" id="Site" value="@Model.User.Site" style="background-color:lightgray" readonly/>
            </div>
        <div class="col-md-3">
            <label >Department:</label>
            <input asp-for="FormReqDbs.Department" class="form-control" id="Dept" value="@Model.User.Dept" style="background-color:lightgray" readonly/>
        </div>
        <div class="col-md-3">
            <label asp-for="FormReqDbs.ResponsibleOfficer">Responsible Officer:</label>
                <input asp-for="FormReqDbs.ResponsibleOfficer" value="@Model.User.UserName" class="form-control" style="background-color:lightgray" readonly />
        </div>
        @if(Model.User.Type=="User"){
        <div class="col-md-3">
            <label asp-for="FormReqDbs.Supervisor">Supervisor:</label>
        <input asp-for="FormReqDbs.Supervisor" class="form-control" value="@Model.User.Supervisor" style="background-color:lightgray" readonly/>
        </div>
        }
        <input asp-for="FormReqDbs.status" type="hidden" value="pending"/>
        <input asp-for="FormReqDbs.Pointer" type="hidden" value=0/>  
    </div>
    <div class="form-group mb-4">
        <label asp-for="FormReqDbs.ContactPhone">Contact Phone:</label>
            
        <input type="number" asp-for="FormReqDbs.ContactPhone" class="form-control" placeholder="example: 52011431" value=null required/>     
            <span asp-validation-for="FormReqDbs.ContactPhone" class="text-danger"></span>
    </div>

    <h4>Equipment Section</h4>
    <table class="table table-bordered">
        <thead class="table-light">
            <tr>
                <th>Equipment Type</th>
                <th>Serial Number</th>
                <th>Problem</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                        <select class="form-control" id="Type" required>
                        <option disabled selected>-- Select Equipment --</option>
                        <option> CPU </option>
                        <option> Monitor </option>
                        <option>Mouse</option>
                        <option>Key board</option>
                        <option>printer</option>
                        <option>Scanner</option>
                        <option>laptop</option>
                        </select>       
                        <span asp-validation-for="FormReqDbs.Equipments" class="text-danger"></span>
                </td>
                <td>
                        <select asp-for="FormReqDbs.SerialNumber" class="form-control" id="SerialNumber" required>

                    </select>
                   <span asp-validation-for="FormReqDbs.SerialNumber" class="text-danger"></span>
                </td>
                    <td>                        
                        <input asp-for="FormReqDbs.ProblemDescription" class="form-control" required/>
                        <span asp-validation-for="FormReqDbs.ProblemDescription" class="text-danger"></span>
                    </td>
            </tr>
        </tbody>
    </table>

    <div class="form-group">
        <input type="submit" value="Submit" class="btn btn-primary" />
        <input type="reset" value="Cancel" class="btn btn-outline-secondary" />
    </div>
</form>
}
</div>

@section Scripts {

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
       
    }

<script>
    const Type = document.getElementById("Type");
    const SerialNumber = document.getElementById("SerialNumber");
    let SiteVariable = null;
    let DepartmentVariable = null;
    let TypeVariable = null;
    Type.addEventListener('change', async function () {
        TypeVariable = Type.value;
        DepartmentVariable=document.getElementById("Dept").value;
        SiteVariable = document.getElementById("Site").value;
        await tryFetchData();
    });
    async function tryFetchData() {
        if (SiteVariable && DepartmentVariable && TypeVariable) {
            try {
                const response = await fetch('/FormReqDbs/GetFormRequests?' +
                    `site=${encodeURIComponent(SiteVariable)}` +
                    `&department=${encodeURIComponent(DepartmentVariable)}` +
                    `&type=${encodeURIComponent(TypeVariable)}`);
                if (!response.ok) throw new Error("Server error");
                const data = await response.json();
                console.log(data);
                SerialNumber.innerHTML = "";
                data.forEach(item => {
                    SerialNumber.innerHTML += `<option>${item.serialNumber}</option>`;
                });
            } catch (err) {
                console.error("Error loading data", err);
            }
        }
    }
</script>
}
